"""
Django settings for ekshome project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import socket
import logging.config
from datetime import tzinfo, timedelta, datetime
from django.utils.log import DEFAULT_LOGGING

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_SECRET_HERE_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
PUSH_API_HOOK = True
PUSH_API_HOOK_DEBUG = False
CHATBOT_HOOK = True
CHATBOT_URL = "http://chatbot.central.lab:8000/api/chatbotcall/"

ALLOWED_HOSTS = ['apicentral', '127.0.0.1']
#APPEND_TRAILING_SLASH = False

try:
    HOSTNAME = socket.gethostname()
except:
    HOSTNAME = 'localhost'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'sequences.apps.SequencesConfig',

    'django_celery_beat',
    'django_celery_results',

    'rest_framework',
    'mis',
    'heartbeat',
    'callcard',
    'crew',
    'patients',
    'accounts',
    'medrecord',
    'pushapi',
    'qarobot',
    'chatbot',
]

TIME = 12 * 60 * 60  # 12 hours
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = TIME    # change expired session
SESSION_IDLE_TIMEOUT = TIME  # logout

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'mail.central.lab'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'central103'
EMAIL_HOST_PASSWORD = '_PASSWORD_HERE_'
DEFAULT_FROM_EMAIL = 'central103@central103.org'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_USER_MODEL = 'accounts.User'
ROOT_URLCONF = 'ekstrenka.urls'
LOGIN_REDIRECT_URL = '/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ekstrenka.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'central103',
        'USER': '_USER_HERE_',
        'PASSWORD': '_PASSWD_HERE_',
        'HOST': '10.15.1.25',
        'PORT': '9999',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
#LANGUAGE_CODE = 'ru_RU.UTF-8'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        #'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        #'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': timedelta(days=1),
}

# LOGLEVEL = os.environ.get('LOGLEVEL', 'info').upper()
# FORMAT = '[%(asctime)s] %(levelname)s: %(message)s'
# logging.basicConfig(format=FORMAT, level=logging.INFO)

# Disable Django's logging setup
LOGGING_CONFIG = None
LOG_ROOT = os.path.join(os.path.dirname(BASE_DIR), "log")
LOG_FILE = os.path.join(LOG_ROOT, 'central103.log')
logging.config.dictConfig({
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'default': {
            # exact format is not important, this is the minimum information
            'format': '[%(asctime)s] %(levelname)s: %(message)s',
        },
        'django.server': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '[%(asctime)s] %(levelname)s: %(message)s',
        }
        #'django.server': DEFAULT_LOGGING['formatters']['django.server'],
    },
    'handlers': {
        # console logs to stderr
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'default',
        },
        'django.server': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'default',
        },
        'logfile': {
            'level': 'INFO',
            'class': "logging.handlers.RotatingFileHandler",
            'filename': LOG_FILE,
            'formatter': 'default',
            'maxBytes': 1024 * 1024 * 100,  # 100MB
            'backupCount': 6,
        }
        # DEFAULT_LOGGING['handlers']['django.server'],
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': 'INFO',
            'handlers': ['logfile'],
        },
        'django': {
            'level': 'INFO',
            'handlers': ['logfile'],
            'propagate': False,
        },
        'gunicorn.access': {
            'level': 'INFO',
            'handlers': ['logfile'],
        },
        'gunicorn.errors': {
            'level': 'INFO',
            'handlers': ['logfile'],
        },
        # Default runserver request logging
        #'django.server': DEFAULT_LOGGING['loggers']['django.server'],
    },
})

CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
# Officially used to fix CELERY_ENABLE_UTC=False and USE_TZ = False when the time is wrong;
# For details, see: https://github.com/celery/django-celery-beat/pull/216/files
DJANGO_CELERY_BEAT_TZ_AWARE = False
